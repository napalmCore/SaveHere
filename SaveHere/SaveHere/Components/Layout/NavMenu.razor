@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
  @if (!IsRightDrawer)
  {
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="downloadfromdirectlink" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.CloudUpload">Download From Direct Link</MudNavLink>
    <MudNavLink Href="downloadvideoaudio" Match="NavLinkMatch.Prefix" Icon="@Icons.Custom.Brands.YouTube">Download Video/Audio</MudNavLink>

    <MudNavLink Href="spotifysearch" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MusicNote">Download From Spotify</MudNavLink>

    <MudNavLink Href="rjmedialinkresolver" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.LibraryMusic">Download From RJMusic</MudNavLink>

    <MudNavLink Href="mediaconverter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.SwitchVideo">Media Converter</MudNavLink>

    <MudNavLink Disabled Href="#" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.WbCloudy">Torrent Downloader</MudNavLink>
    <MudNavLink Disabled Href="#" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.WbCloudy">File Manager</MudNavLink>
    <MudNavLink Disabled Href="#" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Terminal">Terminal</MudNavLink>

    <MudNavLink Href="warpplusservicemanager" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.VpnKey">Warp Plus Proxy</MudNavLink>
  }
  else
  {
    <AuthorizeView>
      <Authorized>
        <MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">@context.User.Identity?.Name</MudNavLink>
      </Authorized>
    </AuthorizeView>
   
    <AuthorizeView Roles="Admin">
      <Authorized>
        <MudNavLink Href="Account/Manage/UserManagement" Icon="@Icons.Material.Filled.ManageAccounts">User Management</MudNavLink>
      </Authorized>
    </AuthorizeView>

    <AuthorizeView>
      <Authorized>
        <form action="Account/Logout" method="post">
          <AntiforgeryToken />
          <input type="hidden" name="ReturnUrl" value="@currentUrl" />
          <button type="submit" class="mud-nav-link mud-ripple">
            <MudIcon Icon="@Icons.Material.Filled.Logout" Color="Color.Info" Class="mr-3"></MudIcon> Logout
          </button>
        </form>
      </Authorized>
    </AuthorizeView>
  }

</MudNavMenu>

@if (!IsRightDrawer)
{
  <div style="display:flex; flex-direction: column; justify-content: end; height: 100%; width: 100%; margin-bottom: 1rem;">
    <MudNavLink Icon="@Icons.Custom.Brands.GitHub" Href="https://github.com/gudarzi/SaveHere" Target="_blank">
      <MudText Typo="Typo.subtitle2" Style="margin-top: -0.25rem;">
        SaveHere
      </MudText>
    </MudNavLink>
    <div style="margin-left: 3.25rem; margin-top: -1.25rem;">
      <SaveHere.Components.Utility.VersionViewer />
    </div>
  </div>
}

@code {
  private string? currentUrl;

  [Parameter]
  public bool IsRightDrawer { get; set; } = false;

  protected override void OnInitialized()
  {
    currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    NavigationManager.LocationChanged += OnLocationChanged;
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
    currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    StateHasChanged();
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }
}


